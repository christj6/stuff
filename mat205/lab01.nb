Jack Christiansen, Steve Schwarcz, Alex Thompson
MAT 205 - 02 : Linear Algebra
M, Th 2 - 3 : 20 (P229), W 11 - 11 : 50 (P201)
Dr. Conjura


MAT 205 (Spring 2013) Lab Assignment #1
Mathematica Introduction/Row Operations

Part I. This part of the lab is intended to familiarize students with entering and manipulating matrices in Mathematica. It should be noted that in Mathematica a matrix is just a special type of list. 

To enter the matrix A = (1	2	3
4	5	6
7	8	9

)   into Mathematica we will treat it as a list of three sublists, where each sublist represents a row of the matrix.. 
Lists in Mathematics are what we could also call sets, that is a collection of objects that are seperated by commas and enclosed in braces. Type the following commands in the empty Input cell that follows this one. An Input Cell is one that can be executed by Mathematica. On the right side of an Input Cell you will see a little triangle at the top of the vertical bar .   The cell you are reading from is a Text cell, which can't be executed by Mathematica. It is just for writing things in that you want someone to read but not execute. The way you know something is a text Cell is that the vertical bar on the right has two little parallel lines at the top. Mathematica can only execute the commands you type into an Input Cell.

.To save time and save you having to do much typing you can copy and paste the two lines of text below into the Input Cell that follows. To execute the two commands, you must then hit shift/enter at the same time.

A= { {1,2,3} , {4,5,6} , {7,8,9} }
MatrixForm[A]

           (Then shift/hit enter.)


A = {{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}
MatrixForm[A]

{{1, 2, 3}, {4, 5, 6}, {7, 8, 9}}

\!\(
TagBox[
RowBox[{"(", "", GridBox[{
{"1", "2", "3"},
{"4", "5", "6"},
{"7", "8", "9"}
},
GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},
GridBoxSpacings->{"Columns" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", 
    ")"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

Suppose you want to change an entry in the matrix (List) to another number. For example, suppose you want to change the entry in the 2nd row and 3rd column of A from a 6 to a 0. You would type 

A[[2,3]]=0 
MatrixForm[A]

in the Input Cell that follows (then hit shift/enter). Try it. Mathematica will produce a new matrix with the new entry included.


A[[2, 3]] = 0
MatrixForm[A]

0

\!\(
TagBox[
RowBox[{"(", "", GridBox[{
{"1", "2", "3"},
{"4", "5", "0"},
{"7", "8", "9"}
},
GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},
GridBoxSpacings->{"Columns" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", 
    ")"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

Suppose you want to identify the entry in a specific location of a matrix.For example, if you want to see the entry in the 3rd row and 1st column of the matrix A, then type A [[3, 1]] in the Input Cell that follows and then hit shift/enter.


A [[3, 1]]

7

To see the entire first row you would type A [[1 ]] in the following Input Cell.To see the entire second column you' d type Transpose[A][[2]] in the Input Cell. Now suppose that you want to see the first two rows of the matrix.You should type A[[ {1 , 2} ]] in the Input Cell and then hit shift/enter.What command should you use if you want to see the second and third columns of the matrix? Try it.

Transpose[A][[{2, 3}]]


{{2, 5, 8}, {3, 0, 9}}

Exercise : In the empty Input Cell that follows, do each of the following (remember to enter shift/enter to execute your commands:

1. Enter and display the matrices BB = (1	4	7	0
2	5	8	1
3	6	9	2

) and  CC = (0	1
2	0
3	4

) into Mathematica.

2. Display the first row of BB.

3. Display the entry in the second row and fourth column of BB.
    Assign this entry to the variable x.
     
4. Extract the third column of the matrix BB and assign it the variable
    name y.

5. Change the entry in the third row and first column of CC to a zero.

6. Display the second and third columns of BB.Create a new matrix FF
    containing just these columns.

7. Type (or copy and paste)

r1= Flatten[Append[BB[[1]],CC[[1]]]]
r2 = Flatten[Append[BB[[2]],CC[[2]]]]
r3 = Flatten[Append[BB[[2]],CC[[2]]]]
GG = {r1,r2,r3}
MatrixForm[GG]

 in the Input Cell that follows and execute.
 What happens? It concatenated the 1st row of BB with the 1st row of CC. It then did the same thing with the 2nd rows of both matrices. Then it created a matrix GG whose rows were comprised of the BBCC rows.
 
 Note: Extra Credit will be given to anyone who can find an easier way to do this!


BB = {{1, 4, 7, 0}, {2, 5, 8, 1}, {3, 6, 9, 2}}
MatrixForm[BB]

CC = {{0, 1}, {2, 0}, {3, 4}}
MatrixForm[CC]

BB[[1]]

x = BB[[2, 4]]

y = Transpose[BB][[3]]

CC[[3, 1]] = 0

FF = Transpose[BB][[{2, 3}]]

r1 = Flatten[Append[BB[[1]], CC[[1]]]]
r2 = Flatten[Append[BB[[2]], CC[[2]]]]
r3 = Flatten[Append[BB[[2]], CC[[2]]]]
GG = {r1, r2, r3}
MatrixForm[GG]

{{1, 4, 7, 0}, {2, 5, 8, 1}, {3, 6, 9, 2}}

\!\(
TagBox[
RowBox[{"(", "", GridBox[{
{"1", "4", "7", "0"},
{"2", "5", "8", "1"},
{"3", "6", "9", "2"}
},
GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},
GridBoxSpacings->{"Columns" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", 
    ")"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

{{0, 1}, {2, 0}, {3, 4}}

\!\(
TagBox[
RowBox[{"(", "", GridBox[{
{"0", "1"},
{"2", "0"},
{"3", "4"}
},
GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},
GridBoxSpacings->{"Columns" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", 
    ")"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

{1, 4, 7, 0}

1

{7, 8, 9}

0

{{4, 5, 6}, {7, 8, 9}}

{1, 4, 7, 0, 0, 1}

{2, 5, 8, 1, 2, 0}

{2, 5, 8, 1, 2, 0}

{{1, 4, 7, 0, 0, 1}, {2, 5, 8, 1, 2, 0}, {2, 5, 8, 1, 2, 0}}

\!\(
TagBox[
RowBox[{"(", "", GridBox[{
{"1", "4", "7", "0", "0", "1"},
{"2", "5", "8", "1", "2", "0"},
{"2", "5", "8", "1", "2", "0"}
},
GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},
GridBoxSpacings->{"Columns" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", 
    ")"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)






In the Input Cell that follows I have written three Mathematica functions that perfor the three different types of row operations that we read about in our books and learned about in class. For now you should simply look at the code to beging to get a feeling for what it is doing. Once you have read the code, remember to execute the cell so that Mathematica will allow you to use the three functions later in this lab.

Clear[Type1RowOp, Type2RowOp, Type3RowOp];

Type1RowOp[A_, rowI1_, constant_, rowI2_ ] := 
  Module[ 
           { rowI1List, rowI2List, LocalMatrixA, j, NewRowI2List, DebugFlag} ,
   
          (* the following is the code for Type1RowOp *)
           DebugFlag = False ;
   
           If [Length[A] < rowI1 , Return["Invalid Matrix"]];
           If [Length[A] < rowI2 , Return["Invalid Matrix"]];
   
           LocalMatrixA = A ;
   
           rowI1List = LocalMatrixA[[rowI1]] ;
          rowI2List = LocalMatrixA[[rowI2]] ;
   
          If [DebugFlag , 
            Print ["rowI1 pointer= ", rowI1];
            Print ["rowI2 pointer= ", rowI2];
            Print ["rowI1 content= ", rowI1List ];
            Print ["rowI2 content= ", rowI2List ];
            ] ; (* End If Statement *)
     
   
         If [ Not[ Length[rowI1List] == Length[rowI2List]], 
    Return["Invalid Matrix"]] ;
   
         NewRowI2List =  rowI2List + (constant*rowI1List);
   
        If [DebugFlag , 
            Print ["new rowI2 content= ", NewRowI2List ];
            ] ; (* End If Statement *)
   
      LocalMatrixA[[ rowI2]] = NewRowI2List ;
   
       Return[ LocalMatrixA] ;
              ] ; (* End of Type1RowOp Module *)


Type2RowOp[A_, rowI1_, rowI2_] := 
  Module[ 
           {  LocalMatrixA, NewRowI2List, NewRowI1List, DebugFlag} ,
   
          (* the following is the code for Type2RowOp *)
         DebugFlag = False ;
   
           If [Length[A] < rowI1 , Return["Invalid Matrix"]];
         If [Length[A] < rowI2 , Return["Invalid Matrix"]];
   
       If [ Not[ Length[A[[rowI1]]] == Length[A[[rowI2]]]], 
    Return["Invalid Matrix"]] ;
   
       LocalMatrixA = A ;
   
       NewRowI1List = LocalMatrixA[[rowI2]] ;
       NewRowI2List = LocalMatrixA[[rowI1]] ;
   
          If [DebugFlag , 
            Print ["rowI1 pointer= ", rowI1];
            Print ["rowI2 pointer= ", rowI2];
            Print ["rowI1 content= ", rowI1List ];
            Print ["rowI2 content= ", rowI2List ];
            Print ["new rowI1 content= ", NewRowI1List ];
            Print ["new rowI2 content= ", NewRowI2List ];
            ] ; (* End If Statement *)
     
   
      LocalMatrixA[[ rowI1]] = NewRowI1List ;
      LocalMatrixA[[ rowI2]] = NewRowI2List ;
   
   
       Return[ LocalMatrixA] ;
              ] ; (* End of Type2RowOp Module *)

Type3RowOp[A_, rowI_, constant_] := 
  Module [
           {LocalMatrixA, NewRowIList, DebugFlag} ,
   
       (* the following is the code for Type3RowOp *)
       DebugFlag = False ;
   
       If [Length[A] < rowI , Return["Invalid Matrix"]];
   
       LocalMatrixA = A ;
   
       NewRowIList = constant*LocalMatrixA[[rowI]] ;
   
          If [DebugFlag , 
            Print ["rowI pointer= ", rowI];
            Print ["rowI content= ", LocalMatrixA[[rowI]] ];
            Print ["new rowI content= ", NewRowIList ];
            ] ; (* End If Statement *)
     
   
      LocalMatrixA[[ rowI]] = NewRowIList ;
      
       
       Return[ LocalMatrixA] ;
              ] ; (* End of Type3RowOp Module *)


In the Input Cells that follow an augmented matrix AB has been defined and in each succesive Input Cell the matrix AB is converted to Reduced Row Echelon Form.. Execute the cells one at a time to what the row reduction process 

Clear[AB];
AB =  {{ 5, -1, 2, 7}, {-2, 6, 9, 0}, {-7, 5, -3, -7}}
MatrixForm[AB]

{{5, -1, 2, 7}, {-2, 6, 9, 0}, {-7, 5, -3, -7}}

\!\(
TagBox[
RowBox[{"(", "", GridBox[{
{"5", 
RowBox[{"-", "1"}], "2", "7"},
{
RowBox[{"-", "2"}], "6", "9", "0"},
{
RowBox[{"-", "7"}], "5", 
RowBox[{"-", "3"}], 
RowBox[{"-", "7"}]}
},
GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},
GridBoxSpacings->{"Columns" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", 
    ")"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

AB = Type1RowOp[AB, 1, 2/5, 2]
MatrixForm[AB]

{{5, -1, 2, 7}, {0, 28/5, 49/5, 14/5}, {-7, 5, -3, -7}}

\!\(
TagBox[
RowBox[{"(", "", GridBox[{
{"5", 
RowBox[{"-", "1"}], "2", "7"},
{"0", 
FractionBox["28", "5"], 
FractionBox["49", "5"], 
FractionBox["14", "5"]},
{
RowBox[{"-", "7"}], "5", 
RowBox[{"-", "3"}], 
RowBox[{"-", "7"}]}
},
GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},
GridBoxSpacings->{"Columns" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", 
    ")"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

AB = Type1RowOp[AB, 1, 7/5, 3]
MatrixForm[AB]

{{5, -1, 2, 7}, {0, 28/5, 49/5, 14/5}, {0, 18/5, -(1/5), 14/5}}

\!\(
TagBox[
RowBox[{"(", "", GridBox[{
{"5", 
RowBox[{"-", "1"}], "2", "7"},
{"0", 
FractionBox["28", "5"], 
FractionBox["49", "5"], 
FractionBox["14", "5"]},
{"0", 
FractionBox["18", "5"], 
RowBox[{"-", 
FractionBox["1", "5"]}], 
FractionBox["14", "5"]}
},
GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},
GridBoxSpacings->{"Columns" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", 
    ")"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

AB = Type3RowOp[AB, 2, 5]
MatrixForm[AB]

{{5, -1, 2, 7}, {0, 28, 49, 14}, {0, 18/5, -(1/5), 14/5}}

\!\(
TagBox[
RowBox[{"(", "", GridBox[{
{"5", 
RowBox[{"-", "1"}], "2", "7"},
{"0", "28", "49", "14"},
{"0", 
FractionBox["18", "5"], 
RowBox[{"-", 
FractionBox["1", "5"]}], 
FractionBox["14", "5"]}
},
GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},
GridBoxSpacings->{"Columns" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", 
    ")"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

AB = Type3RowOp[AB, 3, 5]
MatrixForm[AB]

{{5, -1, 2, 7}, {0, 28, 49, 14}, {0, 18, -1, 14}}

\!\(
TagBox[
RowBox[{"(", "", GridBox[{
{"5", 
RowBox[{"-", "1"}], "2", "7"},
{"0", "28", "49", "14"},
{"0", "18", 
RowBox[{"-", "1"}], "14"}
},
GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},
GridBoxSpacings->{"Columns" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", 
    ")"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

AB = Type1RowOp[AB, 2, -18/28, 3]
MatrixForm[AB]

{{5, -1, 2, 7}, {0, 28, 49, 14}, {0, 0, -(65/2), 5}}

\!\(
TagBox[
RowBox[{"(", "", GridBox[{
{"5", 
RowBox[{"-", "1"}], "2", "7"},
{"0", "28", "49", "14"},
{"0", "0", 
RowBox[{"-", 
FractionBox["65", "2"]}], "5"}
},
GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},
GridBoxSpacings->{"Columns" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", 
    ")"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

AB = Type3RowOp[AB, 3, 2]
MatrixForm[AB]

{{5, -1, 2, 7}, {0, 28, 49, 14}, {0, 0, -65, 10}}

\!\(
TagBox[
RowBox[{"(", "", GridBox[{
{"5", 
RowBox[{"-", "1"}], "2", "7"},
{"0", "28", "49", "14"},
{"0", "0", 
RowBox[{"-", "65"}], "10"}
},
GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},
GridBoxSpacings->{"Columns" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", 
    ")"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

AB = Type1RowOp[AB, 3, 49/65, 2]
MatrixForm[AB]

{{5, -1, 2, 7}, {0, 28, 0, 280/13}, {0, 0, -65, 10}}

\!\(
TagBox[
RowBox[{"(", "", GridBox[{
{"5", 
RowBox[{"-", "1"}], "2", "7"},
{"0", "28", "0", 
FractionBox["280", "13"]},
{"0", "0", 
RowBox[{"-", "65"}], "10"}
},
GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},
GridBoxSpacings->{"Columns" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", 
    ")"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

AB = Type1RowOp[AB, 3, 2/65, 1]
MatrixForm[AB]

"Invalid Matrix"

\!\(
TagBox["\<\"Invalid Matrix\"\>",
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

AB = Type1RowOp[AB, 2, 1/28, 1]
MatrixForm[AB]

"Invalid Matrix"

\!\(
TagBox["\<\"Invalid Matrix\"\>",
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

AB = Type3RowOp[AB, 1, 1/5]
MatrixForm[AB]

"Invalid Matrix"

\!\(
TagBox["\<\"Invalid Matrix\"\>",
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

AB = Type3RowOp[AB, 2, 1/28]
MatrixForm[AB]

"Invalid Matrix"

\!\(
TagBox["\<\"Invalid Matrix\"\>",
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

AB = Type3RowOp[AB, 3, -1/65]
MatrixForm[AB]

"Invalid Matrix"

\!\(
TagBox["\<\"Invalid Matrix\"\>",
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)

In the Input Cell that follows an new augmented matrix AB has been defined. Your job is to use the three types of row reduction functions to convert the matrix to Reduced Row Echelon Form. At each step you will be creating a new Input Cell to perform the next row reduction operation in. To create a new cell simply move the cursor below the existing cell and when the cursor turns into a horizontal bar, hit the enter key and start typing in the new Input Cell that has been created for you.

Rowop was giving me some trouble so I tried overwriting your example code, which worked for a while, but then I got this weird recursive error and rowop stopped working. I took the matrix I had from halfway through the process, plugged it into matlab, and got:
x1 = 21/13
x2 = 10/13
x3 = -2/13

Clear[AB];
AB =  {{ 5, -1, 2, 7}, {-2, 6, 9, 0}, {-7, 5, -3, -7}}
MatrixForm[AB]

{{5, -1, 2, 7}, {-2, 6, 9, 0}, {-7, 5, -3, -7}}

\!\(
TagBox[
RowBox[{"(", "", GridBox[{
{"5", 
RowBox[{"-", "1"}], "2", "7"},
{
RowBox[{"-", "2"}], "6", "9", "0"},
{
RowBox[{"-", "7"}], "5", 
RowBox[{"-", "3"}], 
RowBox[{"-", "7"}]}
},
GridBoxAlignment->{
      "Columns" -> {{Center}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}},
        "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}},
GridBoxSpacings->{"Columns" -> {
Offset[0.27999999999999997`], {
Offset[0.7]}, 
Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
Offset[0.2], {
Offset[0.4]}, 
Offset[0.2]}, "RowsIndexed" -> {}, "Items" -> {}, "ItemsIndexed" -> {}}], "", 
    ")"}],
Function[BoxForm`e$, 
MatrixForm[BoxForm`e$]]]\)
